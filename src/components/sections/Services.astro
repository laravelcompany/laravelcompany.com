---
import SectionTitle from "../ui/SectionTitle.astro";
import Card from "../ui/Card.astro";
import Section from "./Section.astro";

// 🔹 Первый блок: Laravel сервисы
const laravelServices = [
    {
        id: 1,
        title: "Laravel™ AI & LLM Integrations",
        category: "Artificial Intelligence",
        description: "Harness the power of Large Language Models (LLMs) in your Laravel applications...",
        link: "/software",
        isDark: true,
        bgColor: "bg-green",
    },
    {
        id: 2,
        title: "Laravel™ Ecommerce Solutions",
        category: "Shopify & WooCommerce",
        description: "Build enterprise-grade ecommerce platforms with Laravel and Shopify integrations...",
        link: "/software",
        isDark: false,
        bgColor: "bg-gray",
    },
    {
        id: 3,
        title: "Laravel™ VoIP Systems",
        category: "Cloud Communications",
        description: "Develop VoIP solutions with Laravel™ for voice/video calling, conferencing, and SMS integrations...",
        link: "/software",
        isDark: true,
        bgColor: "bg-dark",
    },
    {
        id: 4,
        title: "Laravel™ SaaS Platforms",
        category: "Cloud Software",
        description: "Launch scalable SaaS products with our multi-tenant Laravel starter kit...",
        link: "/saas",
        isDark: false,
        bgColor: "bg-gray",
    },
    {
        id: 5,
        title: "Laravel™ API Development",
        category: "Microservices",
        description: "Build RESTful APIs and GraphQL endpoints for IoT devices, mobile apps, and third-party integrations...",
        link: "/software",
        isDark: true,
        bgColor: "bg-dark",
    },
    {
        id: 6,
        title: "Laravel™ Automation",
        category: "RPA & Workflows",
        description: "Implement robotic process automation (RPA) with Laravel™ queues and scheduled tasks...",
        link: "/software",
        isDark: false,
        bgColor: "bg-green",
    },
];

// 🔹 Дополнительные сервисы
const services = [
    {
        name: "Serverless Laravel on AWS (Bref)",
        slug: "serverless-laravel-bref",
        description: "Run Laravel on AWS Lambda using Bref...",
        benefits: [
            "Massive horizontal scale with no server patching",
            "Blue/green deploys with traffic shifting",
            "Observability baked-in (CloudWatch + X-Ray)"
        ]
    },
    {
        name: "Event-Driven Architectures (Kafka/SNS/SQS)",
        slug: "event-driven-laravel",
        description: "Decouple your monolith using domain events...",
        benefits: [
            "Lower coupling, higher throughput",
            "Replayable streams for audit & recovery",
            "Back-pressure and DLQ strategies"
        ]
    },
    {
        name: "CQRS + Event Sourcing for Laravel",
        slug: "cqrs-es-laravel",
        description: "When auditability and complex workflows matter...",
        benefits: [
            "Full history and audit logs",
            "Optimized read models for UX speed",
            "Easier change-tracking and rollbacks"
        ]
    },
    {
        name: "Laravel ↔ Go/Python Microservice Interop",
        slug: "polyglot-microservices",
        description: "Polyglot FTW: keep Laravel for product velocity...",
        benefits: [
            "Right tool for the job (perf + ML)",
            "Clear SLAs and SLOs",
            "Versioned contracts and backward compatibility"
        ]
    }
];

// 🔹 Structured Data
const org = {
    "@context": "https://schema.org",
    "@type": "Organization",
    "name": "Laravel Agency",
    "url": "https://laravelcompany.com",
    "logo": "https://laravelcompany.com/logo-light.svg",
    "sameAs": [
        "https://www.linkedin.com/company/laravel-agency/",
        "https://github.com/laravelcompany"
    ]
};

const listLd = {
    "@context": "https://schema.org",
    "@type": "ItemList",
    "itemListElement": services.map((s, i) => ({
        "@type": "ListItem",
        "position": i + 1,
        "item": {
            "@type": "Service",
            "name": s.name,
            "url": `https://example.com/services/${s.slug}`,
            "description": s.description
        }
    }))
};

const faqLd = {
    "@context": "https://schema.org",
    "@type": "FAQPage",
    "mainEntity": [
        {
            "@type": "Question",
            "name": "Do you support serverless Laravel on AWS Lambda?",
            "acceptedAnswer": {
                "@type": "Answer",
                "text": "Yes. We deploy Laravel with Bref on AWS Lambda, including warmers, VPC access, file storage strategies, queues, and CI/CD with canary releases."
            }
        },
        {
            "@type": "Question",
            "name": "Can you integrate Laravel with Python or Go microservices?",
            "acceptedAnswer": {
                "@type": "Answer",
                "text": "Absolutely. We design gRPC/REST contracts, async queues, and schema evolution so Laravel plays nicely with Go or Python data/ML services."
            }
        }
    ]
};
---

<Section id="services" aria-label="Laravel Services">
    <div class="mt-24 mb-10">

        <!-- Laravel Services Grid -->
        <div class="grid gap-8 md:grid-cols-2">
            {laravelServices.map((service) => {
                const categoryMap = {
                    "Shopify & WooCommerce": "E-commerce Foundations",
                    "Cloud Communications": "Retail Engagement",
                    "Cloud Software": "Ownership Platforms",
                    "Microservices": "System Architecture",
                    "RPA & Workflows": "Operational Efficiency"
                };
                const textClass = service.isDark ? "text-white" : "";
                return (
                        <Card isUnderline={true}>
                            <a
                                    href={service.link}
                                    class={`group block h-full p-6 sm:p-10 rounded-3xl ${service.bgColor} ${textClass} hover:shadow-xl hover:shadow-indigo-100/50 hover:scale-[1.01] transition-all duration-300`}
                                    aria-labelledby={`service-${service.id}`}
                            >
                                <div
                                        class="grid h-full gap-6 md:grid-cols-[1fr_auto] md:grid-rows-2"
                                        itemscope
                                        itemtype="http://schema.org/Service"
                                >
                                    <div class="flex flex-col justify-between">
                                        <h2
                                                id={`service-${service.id}`}
                                                class="text-2xl font-semibold tracking-tight leading-snug mb-2 group-hover:text-indigo-400 transition-colors duration-300"
                                                itemprop="name"
                                        >
                                            {service.title}
                                        </h2>
                                        <p class="text-base text-muted-foreground leading-relaxed line-clamp-3" itemprop="description">
                                            {service.description}
                                        </p>
                                    </div>

                                    <div class="flex flex-col items-end justify-end">
                                        <div class="mb-4 transform translate-y-2 opacity-0 group-hover:opacity-100 group-hover:translate-y-0 transition-all duration-300">
                                            <img
                                                    src="/logo-light.svg"
                                                    alt="Laravel agency Logo"
                                                    width="48" height="48"
                                                    class="w-auto h-8 filter brightness-125 contrast-125 drop-shadow-sm"
                                            />
                                        </div>
                                        <span class="inline-flex items-center px-4 py-1.5 text-sm font-medium bg-white/10 backdrop-blur-md rounded-full border border-white/20 shadow-sm hover:bg-white/20 transition-colors duration-300" itemprop="category">
                    {categoryMap[service.category] || service.category}
                  </span>
                                    </div>
                                    <meta itemprop="serviceType" content={service.category} />
                                </div>
                            </a>
                        </Card>
                );
            })}
        </div>

        <!-- Extra Laravel 2025 Services -->
        <section class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-16">
            <div class="mb-10 text-center">
                <span class="inline-flex items-center rounded-full bg-blue-50 px-3 py-1 text-xs font-medium text-blue-700 ring-1 ring-inset ring-blue-200">New for 2025</span>
                <h2 class="mt-4 text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl">Laravel, Leveled Up</h2>
                <p class="mt-4 text-lg text-gray-600">Serverless, evented, observable, and audit-ready Laravel.</p>
            </div>

            <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
                {services.map((s) => (
                        <article id={s.slug} class="flex flex-col justify-between rounded-2xl border border-gray-200 bg-white p-6 shadow-sm transition hover:shadow-md">
                            <header>
                                <h3 class="text-xl font-semibold text-gray-900">{s.name}</h3>
                                <p class="mt-2 text-sm text-gray-600">{s.description}</p>
                            </header>
                            <ul class="mt-4 space-y-2 text-sm text-gray-700 list-disc list-inside">
                                {s.benefits.map((b) => <li>{b}</li>)}
                            </ul>
                        </article>
                ))}
            </div>
        </section>

    </div>
</Section>

<!-- SEO Structured Data -->
<script type="application/ld+json">{JSON.stringify(org)}</script>
<script type="application/ld+json">{JSON.stringify(listLd)}</script>
<script type="application/ld+json">{JSON.stringify(faqLd)}</script>
