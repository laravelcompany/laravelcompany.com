---
import MainLayout from "../layouts/MainLayout.astro";
import Card from "../components/ui/Card.astro";

const priceData = [
    {
        title: "Starter",
        slug: "starter",
        description: "Perfect for solo founders or small teams who need quick fixes, content changes, or maintenance with predictable costs.",
        price: 250,
        pricingUnit: "per 10 hours",
        details: {
            developers: "1 Junior Developer",
            support: "10 hours/month",
            updates: "1 active project"
        },
        features: [
            "Bug fixes & small updates",
            "Basic integrations",
            "Email support",
        ],
        callToAction: "Get Started",
        link: "/contact",
        recommendedFor: "Startups, MVPs, maintenance",
        isPopular: false,
    },
    {
        title: "Growth",
        slug: "growth",
        description: "For growing teams who need more consistent engineering support with better response times and proactive help.",
        price: 1500,
        pricingUnit: "per 50 hours",
        details: {
            developers: "1 Mid-Level Developer",
            support: "50 hours/month",
            updates: "Up to 2 active projects"
        },
        features: [
            "Scalable backend and frontend dev",
            "Standard integrations",
            "Priority email support",
            "Daily progress check-ins",
        ],
        callToAction: "Get Started",
        link: "/contact",
        recommendedFor: "SMEs, scale-ups",
        isPopular: true,
    },
    {
        title: "Unlimited",
        slug: "unlimited",
        description: "For teams needing a high-velocity development partner. Unlimited hours, dedicated lead developer, and full-stack support.",
        price: 4500,
        pricingUnit: "flat rate/month",
        details: {
            developers: "1 Senior Developer (Full-time)",
            support: "Unlimited hours",
            updates: "Unlimited projects"
        },
        features: [
            "Full-stack architecture & dev",
            "Advanced features & integrations",
            "Dedicated Slack channel",
            "Daily planning & reporting",
            "Ongoing optimisation & consulting",
        ],
        callToAction: "Book Consultation",
        link: "/contact",
        recommendedFor: "Established businesses, agencies",
        isPopular: false,
    },
];

const currencySymbol = "Â£";
---

<MainLayout title="Laravel consulting pricing">
    <main>
        <section id="pricing" class="py-12 px-4 mx-auto max-w-screen-xl">
            <div class="mx-auto max-w-screen-md text-center mb-10 lg:mb-16">
                <h1 class="mb-4 text-3xl font-extrabold text-[#031D40] dark:text-white sm:text-4xl">
                    Choose the perfect plan for your business
                </h1>
                <p class="text-gray-500 text-[#031D40] sm:text-xl dark:text-white">
                    Transparent and flexible pricing to help your business grow with <strong>Laravel Agency</strong>.
                </p>
            </div>

            <div class="grid gap-6 md:grid-cols-3">
                {priceData.map((plan) => (
                        <Card
                                isUnderline={true}
                                className={plan.isPopular ? "" : ""}
                        >
                            <div class="flex flex-col p-6 h-full">


                                <header class="mb-6 text-center">
                                    <h2 class="text-2xl font-semibold text-[#031D40] dark:text-white mb-2">
                                        {plan.title}
                                    </h2>
                                    <p class="text-[#031D40] dark:text-white mb-2">
                                        {plan.description}
                                    </p>
                                </header>

                                <div class="flex justify-center items-baseline my-6">
                                <span class="text-4xl font-extrabold text-[#031D40] dark:text-white mb-2">
                                    {currencySymbol}{plan.price}
                                </span>
                                    <span class="ml-1 text-gray-500 dark:text-pink-600">
                                    /{plan.pricingUnit.replace(" ", "")}
                                </span>
                                </div>

                                <div class="mb-6 bg-gray-50 dark:bg-gray-800 p-4 rounded-lg">
                                    <p class="text-sm text-gray-700 dark:text-gray-300 mb-2 dark:text-white">
                                        <strong>Recommended for:</strong> {plan.recommendedFor}
                                    </p>
                                    <ul class="space-y-2 text-sm dark:text-white">
                                        {Object.entries(plan.details).map(([key, value]) => (
                                                <li class="flex items-center">
                                                    <svg class="flex-shrink-0 w-4 h-4 text-white mr-2"
                                                         fill="currentColor" viewBox="0 0 20 20">
                                                        <path fill-rule="evenodd"
                                                              d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                                              clip-rule="evenodd"></path>
                                                    </svg>
                                                    <span class="capitalize dark:text-white">{key}:</span> <span
                                                        class="ml-1 font-medium">{value}</span>
                                                </li>
                                        ))}
                                    </ul>
                                </div>

                                <div class="mb-6 flex-grow">
                                    <h3 class="font-medium mb-3 dark:text-white">Features:</h3>
                                    <ul class="space-y-2 dark:text-white">
                                        {plan.features.map((feature) => (
                                                <li class="flex items-center">
                                                    <svg class="flex-shrink-0 w-4 h-4 text-green-500 mr-2"
                                                         fill="currentColor" viewBox="0 0 20 20">
                                                        <path fill-rule="evenodd"
                                                              d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                                              clip-rule="evenodd"></path>
                                                    </svg>
                                                    <span class="dark:text">{feature}</span>
                                                </li>
                                        ))}
                                    </ul>
                                </div>

                                <a
                                        href={plan.link}
                                        class="mt-auto text-center  focus:ring-4 focus:ring-primary-200 font-medium rounded-lg text-sm px-5 py-2.5 bg-primary-500 dark:bg-pink-500 "
                                >
                                    {plan.callToAction}
                                </a>
                            </div>
                        </Card>
                ))}
            </div>
        </section>

        <!-- Scripts -->
        <script is:inline>
            document.addEventListener("DOMContentLoaded", () => {
                const target = document.querySelector("#pricing");
                if (!target) return;

                const items = {
                    JSON.stringify(priceData.map(plan => ({
                        item_name: plan.title,
                        item_id: plan.slug,
                        price: plan.price,
                        currency: "GBP"
                    })))
                };

                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            if (typeof gtag === "function") {
                                gtag("event", "view_pricing_section", {
                                    event_category: "engagement",
                                    event_label: "Laravel Pricing Plans",
                                    value: 1
                                });
                                console.log("GA4 event sent: view_pricing_section");
                            }

                            window.dataLayer = window.dataLayer || [];
                            window.dataLayer.push({
                                event: "pricing_view",
                                ecommerce: {
                                    items
                                }
                            });
                            console.log("dataLayer pushed: pricing_view", items);

                            observer.unobserve(entry.target);
                        }
                    });
                }, {threshold: 0.5});

                observer.observe(target);
            });
        </script>
    </main>
</MainLayout>
