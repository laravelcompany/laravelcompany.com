---
import MainLayout from "../../layouts/MainLayout.astro";
import Tags from "../../components/ui/Tags.astro";
import { getEntry } from 'astro:content';
import { formatDate } from "../../utils";

import "../../styles/global.css";

const { slug } = Astro.params;

if(slug === undefined) {
  throw new Error('Slug is required');
}

const entry = await getEntry('products', slug);

if(entry === undefined) {
  return Astro.redirect('/404');
}

const { Content } = await entry.render();

// Generate structured data for the product
const structuredData = {
  "@context": "https://schema.org/",
  "@type": "Product",
  "name": entry.data.title,
  "description": entry.data.description || entry.data.title,
  "url": `${Astro.site}products/${slug}`,
  "image": entry.data.image ? `${Astro.site}${entry.data.image}` : undefined,
  "brand": {
    "@type": "Brand",
    "name": entry.data.brand || "Your Brand Name"
  },
  "offers": entry.data.price ? {
    "@type": "Offer",
    "price": entry.data.price,
    "priceCurrency": entry.data.currency || "USD",
    "availability": entry.data.availability || "https://schema.org/InStock",
    "url": `${Astro.site}products/${slug}`
  } : undefined,
  "aggregateRating": entry.data.rating ? {
    "@type": "AggregateRating",
    "ratingValue": entry.data.rating.value,
    "reviewCount": entry.data.rating.reviewCount,
    "bestRating": entry.data.rating.bestRating || 5,
    "worstRating": entry.data.rating.worstRating || 1
  } : undefined,
  "category": entry.data.category,
  "sku": entry.data.sku,
  "mpn": entry.data.mpn,
  "gtin": entry.data.gtin,
  "manufacturer": entry.data.manufacturer ? {
    "@type": "Organization",
    "name": entry.data.manufacturer
  } : undefined,
  "datePublished": entry.data.publishedDate,
  "dateModified": entry.data.modifiedDate || entry.data.publishedDate
};

// Remove undefined properties
const cleanStructuredData = JSON.parse(JSON.stringify(structuredData, (key, value) => {
  return value === undefined ? undefined : value;
}));
---

<MainLayout title={entry.data.title}>
  <!-- Structured Data JSON-LD -->
  <script type="application/ld+json" set:html={JSON.stringify(cleanStructuredData)}></script>
  
  <div class="py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-3">
    <div class="mx-auto max-w-screen-sm text-center lg:mb-16 mb-8">
      <h1 title="{entry.data.title}" class="mb-4 text-3xl lg:text-4xl tracking-tight font-extrabold">{entry.data.title}</h1>
      
    </div>
  </div>
	<main class="space-y-40 mb-40 pt-24">
      <section class="bg-white" itemscope itemtype="https://schema.org/Product">
          <div class="gap-16 items-center py-8 px-4 mx-auto max-w-screen-xl lg:grid lg:grid-cols-1 lg:py-16 lg:px-3">
              <div class="font-light text-gray-500 sm:text-lg">
                  <h1 
                    title={entry.data.title} 
                    class="mb-4 text-4xl tracking-tight font-extrabold text-gray-900"
                    itemprop="name"
                  >
                    {entry.data.title}
                  </h1>
                
                  <!-- Product metadata -->
                  {entry.data.image && (
                    <meta itemprop="image" content={`${Astro.site}${entry.data.image}`} />
                  )}
                  {entry.data.description && (
                    <meta itemprop="description" content={entry.data.description} />
                  )}
                  {entry.data.sku && (
                    <meta itemprop="sku" content={entry.data.sku} />
                  )}
                  {entry.data.brand && (
                    <meta itemprop="brand" content={entry.data.brand} />
                  )}
                  {entry.data.category && (
                    <meta itemprop="category" content={entry.data.category} />
                  )}
                
                  <!-- Price information -->
                  {entry.data.price && (
                    <div itemprop="offers" itemscope itemtype="https://schema.org/Offer">
                      <meta itemprop="price" content={entry.data.price.toString()} />
                      <meta itemprop="priceCurrency" content={entry.data.currency || "USD"} />
                      <meta itemprop="availability" content={entry.data.availability || "https://schema.org/InStock"} />
                      <meta itemprop="url" content={`${Astro.site}products/${slug}`} />
                    </div>
                  )}
                
                  <!-- Rating information -->
                  {entry.data.rating && (
                    <div itemprop="aggregateRating" itemscope itemtype="https://schema.org/AggregateRating">
                      <meta itemprop="ratingValue" content={entry.data.rating.value.toString()} />
                      <meta itemprop="reviewCount" content={entry.data.rating.reviewCount.toString()} />
                      <meta itemprop="bestRating" content={(entry.data.rating.bestRating || 5).toString()} />
                      <meta itemprop="worstRating" content={(entry.data.rating.worstRating || 1).toString()} />
                    </div>
                  )}
                
                  <div class="content" itemprop="description">
                    <Content/>
                  </div>
              </div>
          </div>
      </section>
	</main>
</MainLayout>